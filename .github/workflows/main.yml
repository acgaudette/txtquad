name: Build

on:
    push:
        branches: [master, feature/actions]
    pull_request:
        branches: [master]
    workflow_dispatch:

jobs:
    linux:
        runs-on: ubuntu-18.04
        steps:
            - uses: actions/checkout@v2
            - name: package-setup
              run: |
                sudo apt-get install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
                # sudo apt-get install libvulkan-dev vulkan-utils
                sudo apt-get install ninja-build
            - name: vulkan-sdk
              run: |
                wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
                sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.148-bionic.list https://packages.lunarg.com/vulkan/1.2.148/lunarg-vulkan-1.2.148-bionic.list
                sudo apt update
                sudo apt install vulkan-sdk
            - name: post
              run: vulkaninfo
            - name: bootstrap
              run: sh bootstrap
            - name: build-all
              run: ninja demos
            - name: upload
              uses: actions/upload-artifact@v2
              with:
                name: libtxtquad.so
                path: bin/libtxtquad.so
    macos:
        runs-on: macos-10.15
        steps:
            - uses: actions/checkout@v2
            - name: package-setup
              run: |
                brew install ninja
            - name: vulkan-sdk
              run: |
                wget -nv https://sdk.lunarg.com/sdk/download/1.2.148.1/mac/vulkansdk-macos-1.2.148.1.dmg
                mkdir sdk && hdiutil attach *.dmg -mountpoint ./sdk
                cd sdk && ./install_vulkan.py
            - name: post
              run: vulkaninfo
            - name: bootstrap
              run: sh bootstrap
            - name: build-all
              run: ninja demos.macos
            - name: upload
              uses: actions/upload-artifact@v2
              with:
                name: libtxtquad.dylib
                path: bin/libtxtquad.dylib
    win:
        if: ${{ false }} # disable
        runs-on: windows-2019
        steps:
            - uses: actions/checkout@v2
            - uses: microsoft/setup-msbuild@v1.0.2
            - name: package-setup
              run: |
                choco install ninja
                choco install vulkan-sdk
            - name: post
              run: C:/VulkanSDK/1.2.*/Bin/vulkaninfoSDK.exe
            - name: bootstrap-posh
              run: ./bootstrap.ps1
            - name: build-all
              run: |
                ls "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC"
                $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.28.29333\bin\Hostx64\x86"
                $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\Llvm\x64\bin"
                $env:Path += ";"
                $env:Path += echo "C:\VulkanSDK\1.2.*\Bin" | Resolve-Path | Select-Object -ExpandProperty Path
                ninja demos.exe
            - name: upload
              uses: actions/upload-artifact@v2
              with:
                name: txtquad.lib
                path: bin/txtquad.lib
